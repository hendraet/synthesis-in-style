# General
network: PixelEnsemble        # The type of network to use
dataset: dataset_gan          # The dataset name which should be used.

# logger options
image_save_iter: 500          # How often do you want to save output images during training
image_display_iter: 100       # How often do you want to display output images during training
display_size: 4              # How many images do you want to display each time
snapshot_save_iter: 2500      # How often do you want to save trained models
log_iter: 10                  # How often do you want to log the training stats
#validation_iter: 2            # --> if you want to do evaluation in a fixed interval and not every epoch

# optimization options
#max_iter: 500000              # maximum number of training iterations
epochs: 3
batch_size: 4                # batch size
beta1: 0.5                    # Adam parameter
beta2: 0.999                  # Adam parameter
init: xavier                  # initialization [gaussian/kaiming/xavier/orthogonal]
weight_decay: 0.0001          # weight decay
lr: 0.0005
end_lr: 0.000001              # final lr for the cosine_scheduling
cosine_max_update: 1          # After this number of epochs a CosineLRScheduler will stop decreasing the lr
epoch_length: 1000000         # Number of pixels per epoch

# data options
input_dim: 3                  # number of image channels [1/3]
num_workers: 0                # number of data loading threads
image_size: 256               # first resize the shortest image side to this size
downsample_size: 256
num_models: 3                 # Number of trained models
numpy_class: 3

tensor_path: [path to tensors.npz file]  # path to the tensors used for the dataGAN dataset
class_weigths: [1, 1, 1]      #class weights for loss
random_sampling: False
class_probability: 0.5        # class probability for random sampling
generate: True                # should dataset be generated or not
checkpoint: [path to stylegan checkpoint] # checkpoint for a dataGAN generator model
upsample_mode: "bilinear"     # mode for upsample
