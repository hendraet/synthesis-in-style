# General
network: EMANet               # The type of network to use
dataset: wpi                  # The dataset name which should be used.

# logger options
image_save_iter: 500          # How often do you want to save output images during training
image_display_iter: 500       # How often do you want to display output images during training
snapshot_save_iter: 2500      # How often do you want to save trained models
log_iter: 10                  # How often do you want to log the training stats
#validation_iter: 2            # --> if you want to do evaluation in a fixed interval and not every epoch
num_val_visualization: 2      # Number of validation batches to be visualized by wandb
validation_interval: 0.1      #After which fraction of the Epoch the validation is executed

# optimization options
#max_iter: 500000              # maximum number of training iterations
epochs: 4
batch_size: 8                 # batch size
lr: 0.009                     # lr
weight_decay: 0.0001          # weight decay
end_lr: 0.00000001            # final lr for the cosine_scheduling
cosine_max_update_epoch: 2    # After this number of epochs a CosineLRScheduler will stop decreasing the lr
# cosine_max_update_iter: 40000 # After this number of iterations a CosineLRScheduler will stop decreasing the lr
patience: 3                   # How many epochs of non-improvement before the EarlyStopping sets in

## EMANet-specific optimization options
n_layers: 101                 # Layers of the ResNet
lr_mom: 0.9                   # lr momentum for original SGD optimizer (not used when using cosine scheduler)
em_mom: 0.9                   # Hyperparameter for momentum of expectation maximization

# data options
num_classes: 3                  # The number of classes present in the dataset
pretrained_path: /models/ema_net_models/resnet101-2a57e44d.pth  # path to pretrained segmentation model
input_dim: 3                  # number of image channels [1/3]
num_workers: 1                # number of data loading threads
image_size: 256               # first resize the shortest image side to this size
downsample_size: 256
num_augmentations: 5          # How many times each image should be duplicated and augmented
